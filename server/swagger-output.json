{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "This project database using TPT (Table-per-Type) design, because of the complexity of the data structure, from the User has been extended down to use syquelize as a communication with postgreSql. 這邊文檔命名都是大寫為後端js Model的name",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Model: User (Sequelize), Table: users (db table)\n1. 關聯：hasOne(Admin), hasMany(Merchant), hasMany(Image)\n2. 欄位：id(UUID), name, email, password, phoneNumber, address(text), role(enum: customer, merchant, admin), created_at(timestamptz), updated_at(timestamptz)"
    },
    {
      "name": "Admin",
      "description": "Model: Admin (Sequelize), Table: admins (db table)\n1. 關聯：belongsTo(User)\n2. 欄位：id(UUID), user_id(UUID), created_at(timestamptz), updated_at(timestamptz)"
    },
    {
      "name": "Merchant",
      "description": "Model: Merchant (Sequelize), Table: merchants (db table)\n1. 關聯：belongsTo(User), hasMany(Menu), hasMany(ProductOption), hasMany(MerchantCategory), belongsToMany(MerchantCategoryMain through MerchantCategory), belongsTo(Image)\n2. 欄位：id(UUID), user_id(UUID), business_name, description, feature(text), merchant_logo(abandoned), location(json or text), image_id(UUID), business_hours(json), created_at(timestamptz), updated_at(timestamptz)"
    },
    {
      "name": "Image",
      "description": "Model: Image (Sequelize), Table: images (db table)\n1. 關聯：belongsTo(User), hasMany(MerchantCategoryMain), hasMany(Merchant)\n2. 欄位：id(UUID), filename, url, user_id(UUID), width(int), height(int), size(int), mime_type(string), created_at(timestamptz), updated_at(timestamptz)"
    },
    {
      "name": "MerchantCategory",
      "description": "Model: MerchantCategory (Sequelize), Table: merchant_categories (db table)\n中介表：Merchant 與 MerchantCategoryMain 的多對多關聯表\n1. 關聯：belongsTo(Merchant), belongsTo(MerchantCategoryMain)\n2. 欄位：id(UUID), merchant_id(UUID), category_id(UUID)"
    },
    {
      "name": "MerchantCategoryMain",
      "description": "Model: MerchantCategoryMain (Sequelize), Table: merchant_category_mains (db table)\n1. 關聯：belongsToMany(Merchant through MerchantCategory), belongsTo(Image)\n2. 欄位：id(UUID), name, description, image_id(UUID), created_at(timestamptz), updated_at(timestamptz)"
    },
    {
      "name": "Menu",
      "description": "Model: Menu (Sequelize), Table: menus (db table)\n1. 關聯：belongsTo(Merchant), hasMany(Product)\n2. 欄位：id(UUID), name, description, merchant_id(UUID), created_at(timestamptz), updated_at(timestamptz)"
    },
    {
      "name": "Product",
      "description": "Model: Product (Sequelize), Table: products (db table)\n1. 關聯：belongsTo(Menu), belongsToMany(ProductCategoryMain through ProductCategory), belongsToMany(Option through ProductOption)\n2. 欄位：id(UUID), name, description, price(float), menu_id(UUID), created_at(timestamptz), updated_at(timestamptz)"
    },
    {
      "name": "ProductImage",
      "description": "Model: ProductImage (Sequelize), Table: product_images (db table)\n中介表：Product 與 Image 的多對多關聯表\n1. 關聯：belongsTo(Product), belongsTo(Image)\n2. 欄位：id(UUID), product_id(UUID), image_id(UUID), sort_order(int), is_main(boolean, default: false), created_at(timestamptz), updated_at(timestamptz)"
    },
    {
      "name": "ProductOption",
      "description": "Model: ProductOption (Sequelize), Table: product_options (db table)\n中介表：Product 與 Option 的多對多關聯表\n1. 關聯：belongsTo(Product), belongsTo(Option)\n2. 欄位：id(UUID), product_id(UUID), option_id(UUID), required(boolean), sort_order(int), created_at(timestamptz), updated_at(timestamptz)"
    },
    {
      "name": "Option",
      "description": "Model: Option (Sequelize), Table: options (db table)\n商品選項主表\n1. 關聯：hasMany(OptionValue), belongsToMany(Product through ProductOption), belongsToMany(OptionCategoryMain through OptionCategory)\n2. 欄位：id(UUID), name, type(enum: select, checkbox, text, number), description(text), min_select(int), max_select(int), user_id(UUID), merchant_id(UUID), is_global(boolean), created_at(timestamptz), updated_at(timestamptz)"
    },
    {
      "name": "OptionValue",
      "description": "Model: OptionValue (Sequelize), Table: option_values (db table)\n1. 關聯：belongsTo(Option)\n2. 欄位：id(UUID), option_id(UUID), value(string), extra_price(float), is_default(boolean), sort_order(int), created_at(timestamptz), updated_at(timestamptz)"
    },
    {
      "name": "ProductCategory",
      "description": "Model: ProductCategory (Sequelize), Table: product_categories (db table)\n中介表：Product 與 ProductCategoryMain 的多對多關聯\n1. 關聯：belongsTo(Product), belongsTo(ProductCategoryMain)\n2. 欄位：id(UUID), product_id(UUID), category_id(UUID)"
    },
    {
      "name": "ProductCategoryMain",
      "description": "Model: ProductCategoryMain (Sequelize), Table: product_category_mains (db table)\n1. 關聯：belongsToMany(Product through ProductCategory)\n2. 欄位：id(UUID), name, description, image_id(UUID), created_at(timestamptz), updated_at(timestamptz)"
    },
    {
      "name": "OptionCategory",
      "description": "Model: OptionCategory (Sequelize), Table: option_categories (db table)\n中介表：Option 與 OptionCategoryMain 的多對多關聯\n1. 關聯：belongsTo(Option), belongsTo(OptionCategoryMain)\n2. 欄位：id(UUID), option_id(UUID), option_category_main_id(UUID)"
    },
    {
      "name": "OptionCategoryMain",
      "description": "Model: OptionCategoryMain (Sequelize), Table: option_category_mains (db table)\n1. 關聯：hasMany(OptionCategory)\n2. 欄位：id(UUID), name, description, created_at(timestamptz), updated_at(timestamptz)"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/check-auth": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/users/create": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "create user",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "role Can be filled in(customer, merchant, admin)",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "lin@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "aaa123"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "0923213422"
                },
                "address": {
                  "type": "string",
                  "example": "台中市"
                },
                "role": {
                  "type": "string",
                  "example": "customer"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/all": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get all users",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "fing single user",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Modify User Information",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Some description...",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "lin@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "aaa123"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "0923213422"
                },
                "address": {
                  "type": "string",
                  "example": "台中市"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "delete single user",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "login",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Some description...",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "lin@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "aaa123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "logout",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/checkCookies": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get cookies token",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/merchants/create": {
      "post": {
        "tags": [
          "Merchant"
        ],
        "summary": "create merchant",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "uuid"
                },
                "business_name": {
                  "type": "string",
                  "example": "排骨酥東海商圈"
                },
                "description": {
                  "type": "string",
                  "example": "一段說明"
                },
                "feature": {
                  "type": "string",
                  "example": "好吃又健康"
                },
                "image_id": {
                  "type": "string",
                  "example": "uuid"
                },
                "merchant_logo_id": {
                  "type": "string",
                  "example": "uuid"
                },
                "location": {
                  "type": "string",
                  "example": "台中市西屯區xx路128號"
                },
                "business_hours": {
                  "type": "string",
                  "example": "週一～週六08:00~22:00 週日13:00~22:00"
                },
                "is_active": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/merchants/all": {
      "get": {
        "tags": [
          "Merchant"
        ],
        "summary": "find all merchant",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/merchants/{id}": {
      "get": {
        "tags": [
          "Merchant"
        ],
        "summary": "find single merchant",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Merchant"
        ],
        "summary": "modify merchant info",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "uuid"
                },
                "business_name": {
                  "type": "string",
                  "example": "排骨酥東海商圈"
                },
                "description": {
                  "type": "string",
                  "example": "一段說明"
                },
                "feature": {
                  "type": "string",
                  "example": "好吃又健康"
                },
                "image_id": {
                  "type": "string",
                  "example": "uuid"
                },
                "merchant_logo_id": {
                  "type": "string",
                  "example": "uuid"
                },
                "location": {
                  "type": "string",
                  "example": "台中市西屯區xx路128號"
                },
                "business_hours": {
                  "type": "string",
                  "example": "週一～週六08:00~22:00 週日13:00~22:00"
                },
                "is_active": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Merchant"
        ],
        "summary": "delete merchant",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/merchants/user/{id}/merchants": {
      "get": {
        "tags": [
          "Merchant"
        ],
        "summary": "Get All Merchant by User Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/merchant-categorys/": {
      "post": {
        "tags": [
          "MerchantCategoryMain"
        ],
        "summary": "建立類別",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "更新類別資料",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "新名稱"
                },
                "description": {
                  "type": "string",
                  "example": "新說明"
                },
                "image_id": {
                  "type": "string",
                  "example": "uuid"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "MerchantCategoryMain"
        ],
        "summary": "取得所有類別",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/merchant-categorys/{id}": {
      "get": {
        "tags": [
          "MerchantCategoryMain"
        ],
        "summary": "取得單一類別",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "類別 ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "MerchantCategoryMain"
        ],
        "summary": "更新類別",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "更新類別資料",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "新名稱"
                },
                "description": {
                  "type": "string",
                  "example": "新說明"
                },
                "image_id": {
                  "type": "string",
                  "example": "uuid"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "MerchantCategoryMain"
        ],
        "summary": "刪除類別",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "類別 ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/merchant-categorys/merchant": {
      "post": {
        "tags": [
          "MerchantCategory"
        ],
        "summary": "新增類別到商家",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "商家與類別關聯",
            "schema": {
              "type": "object",
              "properties": {
                "merchant_id": {
                  "type": "string",
                  "example": "uuid"
                },
                "category_id": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/merchant-categorys/merchant/{merchant_id}/{category_id}": {
      "delete": {
        "tags": [
          "MerchantCategory"
        ],
        "summary": "從商家移除類別",
        "description": "",
        "parameters": [
          {
            "name": "merchant_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "類別 ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/merchant-categorys/merchant/{merchant_id}/categories": {
      "get": {
        "tags": [
          "MerchantCategory"
        ],
        "summary": "取得商家所有分類",
        "description": "",
        "parameters": [
          {
            "name": "merchant_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/merchant-categorys/category/{category_id}/merchants": {
      "get": {
        "tags": [
          "MerchantCategory"
        ],
        "summary": "取得某類別的所有商家",
        "description": "",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/merchant-categorys/category/{category_id}/merchants/count": {
      "get": {
        "tags": [
          "MerchantCategory"
        ],
        "summary": "取得某類別下商家的數量",
        "description": "",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/admins/create": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "create admin,set user role to admin(Originally for customer),enter user_id",
        "description": "before create you need to login by admin user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/admins/All": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "get all Admin",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/admins/users/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "get single admin data(return user date),enter user_id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "delete admin and set user role to customer(Originally for admin),enter user_id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/menus/create": {
      "post": {
        "tags": [
          "Menu"
        ],
        "summary": "Add menu,Enter mercant_id",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "add menu",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "飲料"
                },
                "description": {
                  "type": "string",
                  "example": "這是一個菜單的說明"
                },
                "merchant_id": {
                  "type": "string",
                  "example": ""
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/menus/all": {
      "get": {
        "tags": [
          "Menu"
        ],
        "summary": "Get all menu",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/menus/merchant/{merchant_id}": {
      "get": {
        "tags": [
          "Menu"
        ],
        "summary": "Find all the menus of a merchant, Enter merchant_id",
        "description": "",
        "parameters": [
          {
            "name": "merchant_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/menus/{id}": {
      "get": {
        "tags": [
          "Menu"
        ],
        "summary": "Find single menu",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Menu"
        ],
        "summary": "edit menu",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "edit menu",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "飲料"
                },
                "description": {
                  "type": "string",
                  "example": "這是一個菜單的說明"
                },
                "merchant_id": {
                  "type": "string",
                  "example": ""
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Menu"
        ],
        "summary": "Delete menu,Enter menu_id,All data related to the product will be deleted.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/products/create": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "add product",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "add product",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "肉燥便當"
                },
                "description": {
                  "type": "string",
                  "example": ""
                },
                "price": {
                  "type": "string",
                  "example": "100"
                },
                "menu_id": {
                  "type": "string",
                  "example": ""
                },
                "is_active": {
                  "type": "boolean",
                  "example": true
                },
                "cost_price": {
                  "type": "number",
                  "example": 20
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/products/all": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get all products",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/products/menu/{menu_id}/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Query all products containing menu_id,Enter menu_id",
        "description": "",
        "parameters": [
          {
            "name": "menu_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Find single product",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "modify product",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "add product",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "肉燥便當"
                },
                "description": {
                  "type": "string",
                  "example": ""
                },
                "price": {
                  "type": "string",
                  "example": "100"
                },
                "menu_id": {
                  "type": "string",
                  "example": ""
                },
                "is_active": {
                  "type": "boolean",
                  "example": true
                },
                "cost_price": {
                  "type": "number",
                  "example": 20
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "deleta single product",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/products/merchant/{merchant_id}/details": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Check all the menus and products of a particular merchant. Enter merchant_id",
        "description": "",
        "parameters": [
          {
            "name": "merchant_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/product-image/": {
      "get": {
        "tags": [
          "ProductImage"
        ],
        "summary": "get All Image",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "ProductImage"
        ],
        "summary": "bing product img",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "product_id": {
                  "example": "any"
                },
                "image_id": {
                  "example": "any"
                },
                "sort_order": {
                  "example": "any"
                },
                "is_main": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/product-image/product/{productId}": {
      "get": {
        "tags": [
          "ProductImage"
        ],
        "summary": "get all images by propduct id",
        "description": "",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/product-image/{productId}/{imageId}": {
      "put": {
        "tags": [
          "ProductImage"
        ],
        "summary": "update",
        "description": "",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "sort_order": {
                  "example": "any"
                },
                "is_main": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ProductImage"
        ],
        "summary": "delete",
        "description": "",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/product-categorys/product-categories-main": {
      "post": {
        "tags": [
          "ProductCategoryMain"
        ],
        "summary": "Add Category",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "img": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "ProductCategoryMain"
        ],
        "summary": "Get All Category",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/product-categorys/product-categories-main/{id}": {
      "put": {
        "tags": [
          "ProductCategoryMain"
        ],
        "summary": "modify Category",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "img": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ProductCategoryMain"
        ],
        "summary": "Delete Category",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/product-categorys/product-categories": {
      "post": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Add ProductCategory",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "product_id": {
                  "example": "any"
                },
                "category_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Delete ProductCategory",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "product_id": {
                  "example": "any"
                },
                "category_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/product-categorys/products/{productId}/categories": {
      "get": {
        "tags": [
          "ProductCategory"
        ],
        "summary": "Get All Categories by Product_id",
        "description": "",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/product-options/create": {
      "post": {
        "tags": [
          "ProductOption"
        ],
        "summary": "Add prductOption",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "product_id": {
                  "example": "any"
                },
                "option_id": {
                  "example": "any"
                },
                "required": {
                  "example": "any"
                },
                "sort_order": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/product-options/all": {
      "get": {
        "tags": [
          "ProductOption"
        ],
        "summary": "Get All prductOption",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/product-options": {
      "get": {
        "tags": [
          "ProductOption"
        ],
        "summary": "Get option by product_id or option_id",
        "description": "",
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "option_id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/product-options/{id}": {
      "get": {
        "tags": [
          "ProductOption"
        ],
        "summary": "Get single prductOption by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "ProductOption"
        ],
        "summary": "Update prductOption by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "product_id": {
                  "example": "any"
                },
                "option_id": {
                  "example": "any"
                },
                "required": {
                  "example": "any"
                },
                "sort_order": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ProductOption"
        ],
        "summary": "Delete prductOption by Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/options/create": {
      "post": {
        "tags": [
          "Option"
        ],
        "summary": "Add Option",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "type": {
                  "example": "any"
                },
                "min_select": {
                  "example": "any"
                },
                "max_select": {
                  "example": "any"
                },
                "user_id": {
                  "example": "any"
                },
                "merchant_id": {
                  "example": "any"
                },
                "is_global": {
                  "example": "any"
                },
                "values": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/options/create-option": {
      "post": {
        "tags": [
          "Option"
        ],
        "summary": "Add Option",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "type": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "min_select": {
                  "example": "any"
                },
                "max_select": {
                  "example": "any"
                },
                "user_id": {
                  "example": "any"
                },
                "merchant_id": {
                  "example": "any"
                },
                "is_global": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/options/all": {
      "get": {
        "tags": [
          "Option"
        ],
        "summary": "Get Option",
        "description": "",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "merchant_id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/options/{id}": {
      "get": {
        "tags": [
          "Option"
        ],
        "summary": "Get Option By Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Option"
        ],
        "summary": "Update Option",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "type": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "min_select": {
                  "example": "any"
                },
                "max_select": {
                  "example": "any"
                },
                "user_id": {
                  "example": "any"
                },
                "merchant_id": {
                  "example": "any"
                },
                "is_global": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Option"
        ],
        "summary": "Delete Option",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/option-values/create": {
      "post": {
        "tags": [
          "OptionValue"
        ],
        "summary": "Add OptionValue",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "option_id": {
                  "example": "any"
                },
                "value": {
                  "example": "any"
                },
                "extra_price": {
                  "example": "any"
                },
                "is_default": {
                  "example": "any"
                },
                "sort_order": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/option-values/all": {
      "get": {
        "tags": [
          "OptionValue"
        ],
        "summary": "Get OptionValue",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/option-values/{id}": {
      "get": {
        "tags": [
          "OptionValue"
        ],
        "summary": "Get OptionValue By Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "OptionValue"
        ],
        "summary": "Edit OptionValue By Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "example": "any"
                },
                "extra_price": {
                  "example": "any"
                },
                "is_default": {
                  "example": "any"
                },
                "sort_order": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "OptionValue"
        ],
        "summary": "Delete OptionValue By Id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/option-category/": {
      "post": {
        "tags": [
          "OptionCategory"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "option_id": {
                  "example": "any"
                },
                "option_category_main_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "OptionCategory"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/option-category/{id}": {
      "get": {
        "tags": [
          "OptionCategory"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "OptionCategory"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "option_id": {
                  "example": "any"
                },
                "option_category_main_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "OptionCategory"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/option-category-main/": {
      "post": {
        "tags": [
          "OptionCategoryMain"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "OptionCategoryMain"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/option-category-main/{id}": {
      "get": {
        "tags": [
          "OptionCategoryMain"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "OptionCategoryMain"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "OptionCategoryMain"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/images/": {
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "Use upload file to post image, and then save it to Google Cloud Storage",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Get all images",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/images/user/{userId}": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Get images by user ID with pagination",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/images/{id}": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Get image by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Image"
        ],
        "summary": "Update image by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "filename": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Image"
        ],
        "summary": "Delete image by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}